<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.standard.mapper.TestStandardMapper">
    
    <resultMap type="TestStandard" id="TestStandardResult">
        <result property="testStandardId"    column="test_standard_id"    />
        <result property="tgsId"    column="tgs_id"    />
        <result property="testBase"    column="test_base"    />
        <result property="testPoint"    column="test_point"    />
        <result property="testGradeId"    column="test_grade_id"    />
        <result property="testItemId"    column="test_item_id"    />
        <result property="grade"    column="grade"    />
        <result property="stuSexId"    column="stu_sex_id"    />
        <result property="testItemName"    column="test_item_name"    />

    </resultMap>

    <sql id="selectTestStandardVo">
        SELECT
            ts.test_point,
            ts.test_grade_id,
            ts.test_standard_id,
            sr.stu_sex_id,
            sr.grade,
            ti.test_item_name,
            ts.test_base


        FROM test_standard ts,test_grade_sex_relation sr,test_item ti
        WHERE ti.test_item_id=sr.test_item_id
          AND ts.tgs_id=sr.tgs_id
        AND sr.test_item_id=2 AND stu_sex_id=0



    </sql>

    <sql id="selectTestStandardVoid">
        SELECT


            ts.test_point,
            ts.test_grade_id,
            ts.test_standard_id,
            sr.stu_sex_id,
            sr.grade,
            ti.test_item_name,
            ts.test_base

        FROM test_standard ts,test_grade_sex_relation sr,test_item ti
        WHERE ti.test_item_id=sr.test_item_id
          AND ts.tgs_id=sr.tgs_id
          AND stu_sex_id=0
          AND ti.test_item_name like "50ç±³è·‘"




    </sql>

    <sql id="selectAllTestStandardVo">
        SELECT
            ts.test_point,
            ts.test_grade_id,
            ts.test_standard_id,
            sr.stu_sex_id,
            sr.grade,
            ti.test_item_name,
            ts.test_base
        FROM test_standard ts,test_grade_sex_relation sr,test_item ti
        where ts.tgs_id=sr.tgs_id
        AND ti.test_item_id=sr.test_item_id
    </sql>

    <select id="selectAllTestStandard" resultMap="TestStandardResult">
        <include refid="selectAllTestStandardVo"/>
    </select>

    <select id="selectTestStandardList" parameterType="TestStandard" resultMap="TestStandardResult">

        select
        ts.test_point,
        ts.test_grade_id,
        ts.test_standard_id,
        sr.stu_sex_id,
        sr.grade,
        ti.test_item_name,
        ts.test_base


        FROM test_standard ts,test_grade_sex_relation sr,test_item ti
        WHERE ti.test_item_id=sr.test_item_id
        AND ts.tgs_id=sr.tgs_id

        <if test="stuSexId != null  and stuSexId != ''"> and stu_sex_id = #{stuSexId}</if>
        <if test="testItemName != null  and testItemName != ''"> and ti.test_item_name like concat('%', #{testItemName}, '%')</if>



    </select>
    
    <select id="selectTestStandardById" parameterType="Long" resultMap="TestStandardResult">

        SELECT
            ts.test_point,
            ts.test_grade_id,
            ts.test_standard_id,
            sr.stu_sex_id,
            sr.grade,
            ti.test_item_name,
            ts.test_base

        FROM test_standard ts,test_grade_sex_relation sr,test_item ti
        WHERE ti.test_item_id=sr.test_item_id
        AND ts.tgs_id=sr.tgs_id
        AND test_standard_id = #{testStandardId}



    </select>
        
    <insert id="insertTestStandard" parameterType="TestStandard" useGeneratedKeys="true" keyProperty="testStandardId">
        insert into test_standard
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tgsId != null">tgs_id,</if>
            <if test="testBase != null">test_base,</if>
            <if test="testPoint != null">test_point,</if>
            <if test="testGradeId != null">test_grade_id,</if>

         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="tgsId != null">#{tgsId},</if>
            <if test="testBase != null">#{testBase},</if>
            <if test="testPoint != null">#{testPoint},</if>
            <if test="testGradeId != null">#{testGradeId},</if>

         </trim>

        </insert>

    <update id="updateTestStandard" parameterType="TestStandard">
        update test_standard
        <trim prefix="SET" suffixOverrides=",">
            <if test="tgsId != null">tgs_id = #{tgsId},</if>
            <if test="testBase != null">test_base = #{testBase},</if>

            <if test="testPoint != null">test_point = #{testPoint},</if>
            <if test="testGradeId != null">test_grade_id = #{testGradeId},</if>
            <if test="testItemId != null">test_item_id = =#{test_item_id},</if>

        </trim>
        where test_standard_id = #{testStandardId}
    </update>

    <delete id="deleteTestStandardById" parameterType="Long">
        delete from test_standard where test_standard_id = #{testStandardId}
    </delete>

    <delete id="deleteTestStandardByIds" parameterType="String">
        delete from test_standard where test_standard_id in
        <foreach item="testStandardId" collection="array" open="(" separator="," close=")">
            #{testStandardId}
        </foreach>
    </delete>

</mapper>