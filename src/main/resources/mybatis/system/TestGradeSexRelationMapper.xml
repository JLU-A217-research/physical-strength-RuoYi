<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.relation.mapper.TestGradeSexRelationMapper">
    
    <resultMap type="TestGradeSexRelation" id="TestGradeSexRelationResult">
        <result property="tgsId"    column="tgs_id"    />
        <result property="grade"    column="grade"    />
        <result property="testItemId"    column="test_item_id"    />
        <result property="stuSexId"    column="stu_sex_id"    />
        <result property="testItemName"    column="test_item_name"    />

    </resultMap>

    <sql id="selectTestGradeSexRelationVo">
        select tgs_id, grade, sr.test_item_id, stu_sex_id ,test_item_name from test_grade_sex_relation sr,test_item ti
        where	ti.test_item_id=sr.test_item_id
    </sql>

    <sql id="selectTestGradeSexRelationVoid">
        select tgs_id, grade, stu_sex_id  from test_grade_sex_relation
    </sql>

    <select id="selectTestGradeSexRelationList" parameterType="TestGradeSexRelation" resultMap="TestGradeSexRelationResult">
        <include refid="selectTestGradeSexRelationVo"/>

            <if test="grade != null "> and grade = #{grade}</if>
            <if test="testItemId != null "> and sr.test_item_id = #{testItemId}</if>
            <if test="stuSexId != null "> and stu_sex_id = #{stuSexId}</if>
            <if test="testItemName != null "> and test_item_name = #{testItemName}</if>


    </select>
    
    <select id="selectTestGradeSexRelationById" parameterType="Long" resultMap="TestGradeSexRelationResult">
        <include refid="selectTestGradeSexRelationVoid"/>
        where tgs_id = #{tgsId}
    </select>
        
    <insert id="insertTestGradeSexRelation" parameterType="TestGradeSexRelation" useGeneratedKeys="true" keyProperty="tgsId">
        insert into test_grade_sex_relation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="grade != null">grade,</if>
            <if test="testItemId != null">test_item_id,</if>
            <if test="stuSexId != null">stu_sex_id,</if>
            <if test="testItemName != null">test_item_name,</if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="grade != null">#{grade},</if>
            <if test="testItemId != null">#{testItemId},</if>
            <if test="stuSexId != null">#{stuSexId},</if>
            <if test="testItemName != null">#{testItemName},</if>
         </trim>
    </insert>

    <update id="updateTestGradeSexRelation" parameterType="TestGradeSexRelation">
        update test_grade_sex_relation
        <trim prefix="SET" suffixOverrides=",">
            <if test="grade != null">grade = #{grade},</if>
            <if test="testItemId != null">test_item_id = #{testItemId},</if>
            <if test="stuSexId != null">stu_sex_id = #{stuSexId},</if>
            <if test="testItemName != null">test_item_name = #{testItemName},</if>

        </trim>
        where tgs_id = #{tgsId}
    </update>

    <delete id="deleteTestGradeSexRelationById" parameterType="Long">
        delete from test_grade_sex_relation where tgs_id = #{tgsId}
    </delete>

    <delete id="deleteTestGradeSexRelationByIds" parameterType="String">
        delete from test_grade_sex_relation where tgs_id in 
        <foreach item="tgsId" collection="array" open="(" separator="," close=")">
            #{tgsId}
        </foreach>
    </delete>

</mapper>