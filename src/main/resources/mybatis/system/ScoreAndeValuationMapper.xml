<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.scoreandevaluation.mapper.ScoreAndEvaluationMapper"><!--ScoreMapper-->
    
    <resultMap type="ScoreAndEvaluation" id="ScoreResult">
        <result property="scoreRecordId"    column="score_record_id"    />
        <result property="stuId"    column="stu_id"    />
        <result property="tgsId"    column="tgs_id"    />
        <result property="itemId"    column="test_item_id"    />
        <result property="itemName"    column="test_item_name"    />
        <result property="testTime"    column="test_time"    />
        <result property="testScore"    column="test_score"    />
        <result property="stuNo"    column="stu_no"    />
        <result property="stuName"    column="stu_name"    />
        <result property="stuSex"    column="dict_label"    />
        <result property="classNo"    column="class_no"    />
        <result property="stuEnrollYear"    column="stu_enroll_year"    />

    </resultMap>

    <sql id="selectScoreVo">
        SELECT s.score_record_id, s.stu_id, s.tgs_id, ti.test_item_id, ti.test_item_name, s.test_time, s.test_score,ps.stu_no, ps.stu_name, sdd.dict_label, cgi.class_no, ps.stu_enroll_year
        FROM score s,prsn_student ps, class_grade_info cgi, sys_dict_data sdd, test_item ti, test_grade_sex_relation tgsr
        WHERE  s.stu_id = ps.stu_id AND ps.grade_class_id = cgi.grade_class_id AND sdd.dict_type = 'sys_user_sex' AND ps.stu_sex = sdd.dict_value
                AND s.tgs_id= tgsr.tgs_id AND tgsr.test_item_id = ti.test_item_id
    </sql>

    <sql id="selectStuVo">
        SELECT ps.stu_id, ps.stu_no, ps.stu_name, sdd.dict_label, cgi.class_no, ps.stu_enroll_year
        FROM prsn_student ps, class_grade_info cgi, sys_dict_data sdd
        WHERE  ps.grade_class_id = cgi.grade_class_id AND sdd.dict_type = 'sys_user_sex' AND ps.stu_sex = sdd.dict_value
    </sql>

    <select id="selectStuList" parameterType="ScoreAndEvaluation" resultMap="ScoreResult">
        <include refid="selectStuVo"/>
        <if test="stuId != null "> and stu_id = #{stuId}</if>
        <if test="tgsId != null "> and tgs_id = #{tgsId}</if>
        <if test="itemId != null "> and test_item_id = #{itemId}</if>
        <if test="itemName != null and itemName != '' "> and test_item_name = #{itemName}</if>
        <if test="testTime != null "> and test_time = #{testTime}</if>
        <if test="testScore != null "> and test_score = #{testScore}</if>
        <if test="stuNo != null "> and stu_no = #{stuNo}</if>
        <if test="stuName != null and stuName != '' "> and stu_name = #{stuName}</if>
        <if test="stuSex != null and stuSex != '' " > and dict_label = #{stuSex}</if>
        <if test="classNo != null "> and class_no = #{classNo}</if>
        <if test="stuEnrollYear != null "> and stu_enroll_year = #{stuEnrollYear}</if>
    </select>

    <select id="selectScoreList" parameterType="ScoreAndEvaluation" resultMap="ScoreResult">
        <include refid="selectScoreVo"/>
            <if test="stuId != null "> and stu_id = #{stuId}</if>
            <if test="tgsId != null "> and tgs_id = #{tgsId}</if>
            <if test="itemId != null "> and test_item_id = #{itemId}</if>
            <if test="itemName != null and itemName != '' "> and test_item_name = #{itemName}</if>
            <if test="testTime != null "> and test_time = #{testTime}</if>
            <if test="testScore != null "> and test_score = #{testScore}</if>
            <if test="stuNo != null "> and stu_no = #{stuNo}</if>
            <if test="stuName != null and stuName != '' "> and stu_name = #{stuName}</if>
            <if test="stuSex != null and stuSex != '' " > and dict_label = #{stuSex}</if>
            <if test="classNo != null "> and class_no = #{classNo}</if>
            <if test="stuEnrollYear != null "> and stu_enroll_year = #{stuEnrollYear}</if>
    </select>

    <select id="selectScoreById" parameterType="Long" resultMap="ScoreResult">
        <include refid="selectScoreVo"/>
        AND s.score_record_id = #{scoreRecordId}
    </select>

    <select id="selectStuById" parameterType="Long" resultMap="ScoreResult">
        <include refid="selectStuVo"/>
        AND ps.stu_id = #{stuId}
    </select>

    <select id="selectTgsId" parameterType="ScoreAndEvaluation" resultType="Long">
        SELECT
            tgs_id
        FROM
            test_grade_sex_relation
        WHERE
            test_item_id = #{itemId}
          AND
                grade = (SELECT cgi.class_grade FROM prsn_student ps, class_grade_info cgi WHERE ps.stu_id = #{stuId} AND ps.grade_class_id = cgi.grade_class_id)
          AND
                stu_sex_id = (SELECT ps.stu_sex FROM prsn_student ps WHERE ps.stu_id = #{stuId})
    </select>

    <insert id="insertScore" parameterType="Score" useGeneratedKeys="true" keyProperty="scoreRecordId"><!--后面这两个参数是自动获取主键的意思-->
        insert into score
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="stuId != null">stu_id,</if>
            <if test="tgsId != null">tgs_id,</if>
            <if test="testTime != null">test_time,</if>
            <if test="testScore != null">test_score,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="stuId != null">#{stuId},</if>
            <if test="tgsId != null">#{tgsId},</if>
            <if test="testTime != null">#{testTime},</if>
            <if test="testScore != null">#{testScore},</if>
         </trim>
    </insert>

    <update id="updateScore" parameterType="Score">
        update score
        <trim prefix="SET" suffixOverrides=",">
            <if test="stuId != null">stu_id = #{stuId},</if>
            <if test="tgsId != null">tgs_id = #{tgsId},</if>
            <if test="testTime != null">test_time = #{testTime},</if>
            <if test="testScore != null">test_score = #{testScore},</if>
        </trim>
        where score_record_id = #{scoreRecordId}
    </update>

    <delete id="deleteScoreById" parameterType="Long">
        delete from score where score_record_id = #{scoreRecordId}
    </delete>

    <delete id="deleteScoreByIds" parameterType="String">
        delete from score where score_record_id in 
        <foreach item="scoreRecordId" collection="array" open="(" separator="," close=")">
            #{scoreRecordId}
        </foreach>
    </delete>

</mapper>